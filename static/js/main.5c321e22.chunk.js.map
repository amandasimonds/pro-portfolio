{"version":3,"sources":["components/LandingPage.js","components/Contact.js","components/Projects.js","components/Resume.js","components/About.js","App.js","serviceWorker.js","index.js","assets/images/userpicture.jpg"],"names":["LandingPage","style","width","margin","className","col","src","myPic","alt","href","rel","target","aria-hidden","Component","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"mPA4CeA,E,uKAtCP,OACI,yBAAKC,MAAO,CAACC,MAAO,OAAQC,OAAQ,SAChC,kBAAC,OAAD,CAAMC,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,IACP,yBACAD,UAAU,QACVE,IAAKC,IACLC,IAAI,UAEJ,yBAAKJ,UAAU,eACX,wDAEA,6BACA,mGAKA,yBAAKA,UAAU,gBAEX,uBAAGK,KAAK,6CAA6CC,IAAI,sBAAsBC,OAAO,UAClF,uBAAGP,UAAU,wBAAwBQ,cAAY,UAIrD,uBAAGH,KAAK,wCAAwCC,IAAI,sBAAsBC,OAAO,UAC7E,uBAAGP,UAAU,sBAAsBQ,cAAY,mB,GA5BzDC,a,GCFJA,YCACA,YCAFA,YCADA,Y,MCmCLC,MA9Bf,WACE,OACE,yBAAKV,UAAU,oBACb,kBAAC,SAAD,KACI,kBAAC,SAAD,CAAQA,UAAU,eAAeW,MAAM,iBAAiBC,QAAM,GAC1D,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,eAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAGR,kBAAC,SAAD,CAAQF,MAAM,SACV,kBAAC,aAAD,KACE,kBAAC,IAAD,CAAME,GAAG,WAAT,UACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,WAGR,kBAAC,UAAD,KACI,yBAAKb,UAAU,iBACf,kBAAC,EAAD,UClBMc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCRNC,IAASC,OACP,kBAAC,IAAD,KACM,kBAAC,EAAD,OAENC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEzI5BC,EAAOC,QAAU,IAA0B,yC","file":"static/js/main.5c321e22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Cell } from \"react-mdl\";\r\nimport myPic from \"../assets/images/userpicture.jpg\"\r\n\r\nclass LandingPage extends Component {\r\n    render(){\r\n        return(\r\n            <div style={{width: \"100%\", margin: \"auto\"}}>\r\n                <Grid className=\"landing-grid\">\r\n                    <Cell col={12}>\r\n                        <img \r\n                        className=\"myPic\"\r\n                        src={myPic}\r\n                        alt=\"myPic\"\r\n                        />\r\n                        <div className=\"banner-text\">\r\n                            <h1>Full Stack Web Developer</h1>\r\n\r\n                            <hr/>\r\n                            <p>\r\n                               Javascript | React | HTML | CSS | Express | MongoDB | MySQL | NodeJS \r\n                            </p>\r\n\r\n                            \r\n                            <div className=\"social-links\">\r\n                                {/* LinkedIn */}\r\n                                <a href=\"https://www.linkedin.com/in/amandasimonds/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\"/>\r\n                                </a>\r\n\r\n                                {/* GitHub */}\r\n                                <a href=\"https://www.github.com/amandasimonds/\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n                                    <i className=\"fa fa-github-square\" aria-hidden=\"true\"/>\r\n                                </a>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage;","import React, { Component } from \"react\";\r\n\r\nclass Contact extends Component {\r\n    render(){\r\n        return(\r\n            <div><h1>Contact Page</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\n\r\nclass Projects extends Component {\r\n    render(){\r\n        return(\r\n            <div><h1>Projects Page</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from \"react\";\r\n\r\nclass Resume extends Component {\r\n    render(){\r\n        return(\r\n            <div><h1>Resume Page</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resume;","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n    render(){\r\n        return(\r\n            <div><h1>About Page</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\nimport './App.css';\nimport { Layout, Navigation, Content, Drawer, Header } from \"react-mdl\";\nimport Main from \"./components/main\"\nimport {Link} from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage\"\n\nfunction App() {\n  return (\n    <div className=\"demo-big-content\">\n      <Layout>\n          <Header className=\"header-color\" title=\"Amanda Simonds\" scroll>\n              <Navigation>\n                  <Link to=\"landingpage\">Landing</Link>\n                  <Link to=\"/resume\">Resume</Link>\n                  <Link to=\"/projects\">Projects</Link>\n                  <Link to=\"/contact\">Contact</Link>\n                  <Link to=\"/about\">About</Link>\n              </Navigation>\n          </Header>\n          <Drawer title=\"Title\">\n              <Navigation>\n                <Link to=\"/resume\">Resume</Link>\n                  <Link to=\"/projects\">Projects</Link>\n                  <Link to=\"/contact\">Contact</Link>\n                  <Link to=\"/about\">About</Link>\n              </Navigation>\n          </Drawer>\n          <Content>\n              <div className=\"page-content\" />\n              <LandingPage/>\n          </Content>\n      </Layout>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/userpicture.26731c7a.jpg\";"],"sourceRoot":""}